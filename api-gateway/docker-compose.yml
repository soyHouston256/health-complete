version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: .
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDRESS=redis:6379
      - JWT_SECRET=my-super-secret-jwt-key
    depends_on:
      - redis
      - user-service
      - order-service
    volumes:
      - ./config/config.json:/app/config/config.json:ro
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache y rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio de ejemplo - Users
  user-service:
    build: ./examples/services/user-service
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - SERVICE_NAME=user-service
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio de ejemplo - Orders
  order-service:
    build: ./examples/services/order-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - SERVICE_NAME=order-service
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servicio de ejemplo - Payments
  payment-service:
    build: ./examples/services/payment-service
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - SERVICE_NAME=payment-service
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Commander - Interface web para Redis
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - gateway-network
    restart: unless-stopped

  # Nginx para servir documentaci√≥n (opcional)
  nginx-docs:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - ./docs:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - gateway-network
    restart: unless-stopped

networks:
  gateway-network:
    driver: bridge

volumes:
  redis_data:
    driver: local